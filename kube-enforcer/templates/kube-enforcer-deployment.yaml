apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    role: {{ .Release.Name }}
    app: {{ include "kube-enforcer.fullname" . }}
  name: {{ include "kube-enforcer.fullname" . }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ include "kube-enforcer.fullname" . }}
      {{- with .Values.podAnnotations }}
      annotations:
      {{- range $key,$value := . }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
      {{- end }}
    spec:
      {{- with .Values.securityContext }}
      securityContext:
{{ toYaml . | indent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      containers:
        - name: kube-enforcer
          {{- with .Values.container_securityContext }}
          securityContext:
{{ toYaml . | indent 12 }}
          {{- end }}
          image: "{{ .Values.imageCredentials.repositoryUriPrefix }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          ports:
{{- if not .Values.kubeEnforcerAdvance.enable }}
            - containerPort: 8443
{{- else }}
            - containerPort: 8449
            - containerPort: 8442
{{- end }}
{{- if not .Values.kubeEnforcerAdvance.enable }}
{{- with .Values.livenessProbe }}
          livenessProbe:
{{ toYaml . | indent 12 }}
{{- end }}
{{- with .Values.readinessProbe }}
          readinessProbe:
{{ toYaml . | indent 12 }}
{{- end }}
{{- end }}
{{- with .Values.resources }}
          resources:
{{ toYaml . | indent 12 }}
{{- end }}
          env:
            - name: AQUA_TOKEN
              valueFrom: 
                secretKeyRef:
                  name: {{ .Values.aquaSecret.name }}
                  key: token
            - name: AQUA_ENABLE_CACHE
              value: "{{ .Values.aqua_enable_cache }}"
            - name: AQUA_CACHE_EXPIRATION_PERIOD
              value: "{{ .Values.aqua_cache_expiration_period }}"
            - name: AQUA_LOGICAL_NAME
              value: "{{ .Values.logicalName }}"
            - name: TLS_SERVER_CERT_FILEPATH
              value: /certs/server.crt
            - name: TLS_SERVER_KEY_FILEPATH
              value: /certs/server.key
            - name: AQUA_GATEWAY_SECURE_ADDRESS
              value: {{ .Values.envs.gatewayAddress }}
{{- if .Values.kubeEnforcerAdvance.enable }}
            - name: AQUA_TLS_PORT
              value: "8449"
            - name: AQUA_KE_SERVER_PORT
              value: "8442"
{{- else }}
            - name: AQUA_TLS_PORT
              value: "8443"
{{- end }}
            - name: SCALOCK_LOG_LEVEL
              value: {{ .Values.logLevel | default "INFO" }}
            {{- if .Values.TLS.enabled }}
            - name: "AQUA_PRIVATE_KEY"
              value: "/opt/aquasec/ssl/key.pem"
            - name: "AQUA_PUBLIC_KEY"
              value: "/opt/aquasec/ssl/cert.pem"
            {{- if .Values.TLS.rootCA_fileName }}
            - name: "AQUA_ROOT_CA"
              value: "/opt/aquasec/ssl/ca.pem"
            {{- end }}
            - name: "AQUA_TLS_VERIFY"
              value: {{ .Values.TLS.tls_verify | quote }}
              {{- end }}
            {{- include "kube-enforcer.extraEnvironmentVars" .Values | nindent 12 }}
            {{- include "kube-enforcer.extraSecretEnvironmentVars" .Values | nindent 12 }}
{{- if .Values.kubeEnforcerAdvance.enable }}
            - name: CLUSTER_NAME
              value: {{ .Values.kubeEnforcerAdvance.clusterName | default "aqua-secure" }}   # Cluster display name in aqua enterprise.
            - name: AQUA_ENVOY_MODE
              value: "true"
{{- end }}
          volumeMounts:
            - name: "certs"
              mountPath: "/certs"
{{- if .Values.kubeEnforcerAdvance.enable }}
            - name: "envoy-shared"
              mountPath: "/etc/aquasec/envoy"
{{- end }}
{{- if .Values.TLS.enabled }}
            - name: "tls-certs"
              mountPath: /opt/aquasec/ssl/
              readOnly: true
{{- end }}
{{- if .Values.kubeEnforcerAdvance.enable }}
        - name: envoy
          image: "{{ .Values.kubeEnforcerAdvance.envoy.image.repository }}:{{ .Values.kubeEnforcerAdvance.envoy.image.tag }}"
          imagePullPolicy: "{{ .Values.kubeEnforcerAdvance.envoy.image.pullPolicy }}"
          command: ["/bin/sh", "-c", "cp /etc/envoy/cds.yaml /etc/aquasec/envoy/cds.yaml && touch /etc/aquasec/envoy/ca-certificates.crt && envoy -c /etc/envoy/envoy.yaml"]
          ports:
          - containerPort: 8443
            protocol: TCP
          volumeMounts:
          - mountPath: /etc/envoy
            name: envoy-config
          - name: "envoy-shared"
            mountPath: "/etc/aquasec/envoy"
          - mountPath: /etc/ssl/envoy
            name: certs
{{- with .Values.kubeEnforcerAdvance.envoy.livenessProbe }}
          livenessProbe:
{{ toYaml . | indent 12 }}
{{- end }}
{{- with .Values.kubeEnforcerAdvance.envoy.readinessProbe }}
          readinessProbe:
{{ toYaml . | indent 12 }}
{{- end }}
{{- with .Values.kubeEnforcerAdvance.envoy.resources }}
          resources:
{{ toYaml . | indent 12 }}
{{- end }}
{{- end }}
      volumes:
        - name: "certs"
          secret:
            secretName: {{ .Values.certsSecret.name }}
{{- if .Values.TLS.enabled }}
        - name: "tls-certs"
          secret:
            defaultMode: 420
            secretName: {{ .Values.TLS.secretName }}
            items:
            - key: {{ .Values.TLS.publicKey_fileName }}
              path: cert.pem
            - key: {{ .Values.TLS.privateKey_fileName }}
              path: key.pem
            {{- if .Values.TLS.rootCA_fileName }}
            - key: {{ .Values.TLS.rootCA_fileName }}
              path: ca.pem
            {{- end }}
{{- end }}
{{- if .Values.kubeEnforcerAdvance.enable }}
        - name: "envoy-config"
          configMap:
            name: "{{ .Release.Name }}-envoy-conf"
        - name: "envoy-shared"
          emptyDir: {}
{{- end }}
{{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
  selector:
    matchLabels:
      app: {{ include "kube-enforcer.fullname" . }}
