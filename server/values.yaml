# Specifies the secret data for imagePullSecrets needed to fetch the private docker images
imageCredentials:
  create: true
  repositoryUriPrefix: "registry.aquasec.com" # for dockerhub - "docker.io"
  registry: "registry.aquasec.com" #REQUIRED only if create is true, for dockerhub - "index.docker.io/v1/"
  username: ""
  password: ""
  email:


rbac:
  enabled: true
  roleRef:

admin:
  token: "3EnE0KFgXy80MfOBhK8OfXiTI_lhS7zjQzuDu4VeOEbMVEThlKxplaGeR_1RNtpEerBd2pSjISxDUvc9aqM66IsfI18ZgPoWtYOx0Zio_sjLznkwiYc6PVXLGYQt93GuZmcR9DUvoasaIxPjDwtuDdBMatwujSdmA2iS6nOTIT4uSTtHBb2JmGIrZnjD5fYwO6piIml3uUZsl7TgRtWtoIXg-f3typDkFgr6c42Iqb_Ib9-R9l-U_WGv4r47Tz_WvKIgSfiFMeu0SP2SzOcslxT5ARzGVKbTSjNK8it3P6iy5KrYXeoViBDU4CM57saPB72WkiF4fpqYlIf1P3RBZm6gffMrFQTvxlP8dP380_SMZPsQ7Qh7nDIZmT2FxTBiQY0YQCKdjmZrlqwO8e9nD5bMTazaQcbY_-V1DPoYJ7V-IPntLo7wp2wCkritpf99FZlnG2ZMKEgnwp4zDMFLHacA8eNYahmQzPCkXYayJg=="
  password: "Vpn12345!"

db:
  external:
    enabled: false
    name:
    host:
    port:
    user:
    password:
    auditName:
    auditHost:
    auditPort:
    auditUser:
    auditPassword:
  image:
    repository: database
    tag: 3.5
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
  persistence:
    enabled: true
    storageClass: aqua-storage
    size: 30Gi
    accessMode: ReadWriteOnce
  livenessProbe:
    exec:
      command:
      - sh
      - -c
      - exec pg_isready --host $POD_IP
    initialDelaySeconds: 60
    timeoutSeconds: 5
    failureThreshold: 6
  readinessProbe:
    exec:
      command:
      - sh
      - -c
      - exec pg_isready --host $POD_IP
    initialDelaySeconds: 5
    timeoutSeconds: 3
    periodSeconds: 5
  resources:
    requests:
      cpu: 0.1
      memory: 0.2Gi
    limits:
      cpu: 1
      memory: 1Gi
  nodeSelector: {}
  tolerations: []
  affinity: {}

gate:
  image:
    repository: gateway
    tag: 3.5
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    externalPort: 3622
  publicIP: aqua-gateway
  replicaCount: 1
  livenessProbe: {}
  readinessProbe: {}
  resources:
    requests:
      cpu: 0.1
      memory: 0.2Gi
    limits:
      cpu: 1
      memory: 2Gi
  nodeSelector: {}
  tolerations: []
  affinity: {}

web:
  image:
    repository: console
    tag: 3.5
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    externalPort: 8080
  ingress:
    enabled: false
    annotations: {}
    #  kubernetes.io/ingress.class: nginx
    hosts: #REQUIRED
    #- aquasec-test.example.com
    tls: []
    #  - secretName: aquasec-tls
    #    hosts:
    #      - aquasec.domain.com
  replicaCount: 1
  livenessProbe: {}
  readinessProbe: {}
  resources:
    requests:
      cpu: 0.1
      memory: 0.2Gi
    limits:
      cpu: 1
      memory: 2Gi
  nodeSelector: {}
  tolerations: []
  affinity: {}

scanner:
  enabled: false
  image:
    repository: scanner
    tag: 3.5
    pullPolicy: IfNotPresent
  user:
  password:
  replicaCount: 1
  livenessProbe: {}
  readinessProbe: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}