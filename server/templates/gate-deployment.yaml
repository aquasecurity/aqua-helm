apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-gateway
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}-gateway
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.gate.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-gateway
  template:
    metadata:
      annotations:
      {{- if and (.Values.gate.tolerations) (semverCompare "<1.6-0" .Capabilities.KubeVersion.GitVersion) }}
        scheduler.alpha.kubernetes.io/tolerations: '{{ toJson .Values.gate.tolerations }}'
      {{- end }}
      {{- with .Values.gate.podAnnotations }}
      {{- range $key,$value := . }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
      {{- end }}
      labels:
        app: {{ .Release.Name }}-gateway
      name: {{ .Release.Name }}-gateway
    spec:
      {{- with .Values.gate.securityContext }}
      securityContext:
{{ toYaml . | indent 8 }}
      {{- end }}
      serviceAccount: {{ .Release.Namespace }}-sa
      containers:
      - name: gate
        {{- with .Values.gate.container_securityContext }}
        securityContext:
{{ toYaml . | indent 10 }}
        {{- end }}
        image: "{{ .Values.imageCredentials.repositoryUriPrefix }}/{{ .Values.gate.image.repository }}:{{ .Values.gate.image.tag }}"
        imagePullPolicy: "{{ .Values.gate.image.pullPolicy }}"
        env:
        - name: SCALOCK_LOG_LEVEL
          value: {{ .Values.gate.logLevel | default "INFO" }}
        - name: AQUA_CONSOLE_SECURE_ADDRESS
        {{- if eq .Values.platform "k3s" }}
          value: "{{ .Release.Name }}-console-svc:444"
        {{- else }}
          value: "{{ .Release.Name }}-console-svc:443"
        {{- end }}
        - name: SCALOCK_GATEWAY_PUBLIC_IP
          value: {{ .Values.gate.publicIP | default "aqua-gateway-svc" }}
        - name: HEALTH_MONITOR
          value: "0.0.0.0:8082"
        - name: SCALOCK_DBUSER
          value: {{ .Values.db.external.enabled | ternary .Values.db.external.user "postgres" }}
        {{- if .Values.db.passwordFromSecret.enabled }}
        - name: SCALOCK_DBPASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.db.passwordFromSecret.dbPasswordName }}
              key: {{ .Values.db.passwordFromSecret.dbPasswordKey }}
          {{- else }}
        - name: SCALOCK_DBPASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-database-password
              key: db-password
          {{- end }}
        - name: SCALOCK_DBNAME
          value: {{ .Values.db.external.enabled | ternary .Values.db.external.name "scalock" }}
        - name: SCALOCK_DBHOST
          {{- if .Values.db.external.enabled }}
          value: {{ .Values.db.external.host }}
          {{- else }}
          value: {{ .Release.Name }}-database-svc
          {{- end }}
        - name: SCALOCK_DBPORT
          value: {{ .Values.db.external.enabled | ternary .Values.db.external.port "5432" | quote }}
        - name: SCALOCK_AUDIT_DBUSER
          value: {{ .Values.db.external.enabled | ternary .Values.db.external.auditUser "postgres" }}
        - name: SCALOCK_AUDIT_DBPASSWORD
          {{- if .Values.db.passwordFromSecret.enabled }}
          valueFrom:
            secretKeyRef:
              name: {{ .Values.db.passwordFromSecret.dbAuditPasswordName }}
              key: {{ .Values.db.passwordFromSecret.dbAuditPasswordKey }}
          {{- else if and ( not .Values.db.passwordFromSecret.enabled ) ( .Values.db.external.enabled ) }}
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-database-password
              {{- if .Values.db.external.auditPassword }}
              key: audit-password
              {{- else }}
              key: db-password
              {{- end }}
          {{- else }}
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-database-password
              key: audit-password
          {{- end }}
        - name: SCALOCK_AUDIT_DBNAME
          value: {{ .Values.db.external.enabled | ternary .Values.db.external.auditName "slk_audit" }}
        - name: SCALOCK_AUDIT_DBHOST
          {{- if .Values.db.external.enabled }}
          value: {{ .Values.db.external.auditHost }}
          {{- else }}
          value: {{ .Release.Name }}-audit-database-svc
          {{- end }}
        - name: SCALOCK_AUDIT_DBPORT
          value: {{ .Values.db.external.enabled | ternary .Values.db.external.auditPort "5432" | quote }}
        {{- if .Values.activeactive }}
        - name: AQUA_PUBSUB_DBUSER
          value: {{ .Values.db.external.enabled | ternary .Values.db.external.pubsubUser "postgres" }}
        {{- if .Values.db.passwordFromSecret.enabled }}
        - name: AQUA_PUBSUB_DBPASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.db.passwordFromSecret.dbPubsubPasswordName }}
              key: {{ .Values.db.passwordFromSecret.dbPubsubPasswordKey }}
          {{- else }}
        - name: AQUA_PUBSUB_DBPASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-database-password
              {{- if .Values.db.external.pubsubPassword }}
              key: pubsub-password
              {{- else }}
              key: db-password
              {{- end }}
        {{- end }}
        - name: AQUA_PUBSUB_DBNAME
          value: {{ .Values.db.external.enabled | ternary .Values.db.external.pubsubName "aqua_pubsub" }}
        - name: AQUA_PUBSUB_DBHOST
          {{- if .Values.db.external.enabled }}
          value: {{ .Values.db.external.pubsubHost }}
          {{- else }}
          value: {{ .Release.Name }}-database-svc
          {{- end }}
        - name: AQUA_PUBSUB_DBPORT
          value: {{ .Values.db.external.enabled | ternary .Values.db.external.pubsubPort "5432" | quote }}
          {{- end }}
          {{- if .Values.db.ssl }}
        - name: SCALOCK_DBSSL
          value: require
          {{- end }}
          {{- if .Values.db.auditssl }}
        - name: SCALOCK_AUDIT_DBSSL
          value: require
          {{- end }}
          {{- if .Values.db.pubsubssl }}
        - name: AQUA_PUBSUB_DBSSL
          value: require
          {{- end }}
        {{- if .Values.gate.TLS.enabled }}
        - name: "AQUA_PRIVATE_KEY"
          value: "/opt/aquasec/ssl/key.pem"
        - name: "AQUA_PUBLIC_KEY"
          value: "/opt/aquasec/ssl/cert.pem"
        {{- if .Values.gate.TLS.rootCA_fileName }}
        - name: "AQUA_ROOT_CA"
          value: "/opt/aquasec/ssl/ca.pem"
        {{- end }}
        - name: "AQUA_VERIFY_ENFORCER"
          value: {{ .Values.gate.TLS.aqua_verify_enforcer | quote}}
        {{- end }}
        {{- include "server.extraEnvironmentVars" .Values.gate | nindent 8 }}
        {{- include "server.extraSecretEnvironmentVars" .Values.gate | nindent 8 }}
        ports:
        - containerPort: 3622
          protocol: TCP
        - containerPort: 8443
          protocol: TCP
{{- with .Values.gate.livenessProbe }}
        livenessProbe:
{{ toYaml . | indent 10 }}
{{- end }}
{{- with .Values.gate.readinessProbe }}
        readinessProbe:
{{ toYaml . | indent 10 }}
{{- end }}
        {{- if .Values.gate.TLS.enabled }}
        volumeMounts:
        - name: certs
          mountPath: /opt/aquasec/ssl/
          readOnly: true
        {{- end }}
        resources:
{{ toYaml .Values.gate.resources | indent 12 }}
      {{- with .Values.gate.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.gate.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- if and (.Values.gate.tolerations) (semverCompare "^1.6-0" .Capabilities.KubeVersion.GitVersion) }}
      tolerations:
{{ toYaml .Values.gate.tolerations | indent 6 }}
      {{- end }}
      {{- if .Values.gate.TLS.enabled }}
      volumes:
      - name: certs
        secret:
          defaultMode: 420
          secretName: {{ .Values.gate.TLS.secretName }}
          items:
          - key: {{ .Values.gate.TLS.publicKey_fileName }}
            path: cert.pem
          - key: {{ .Values.gate.TLS.privateKey_fileName }}
            path: key.pem
          {{- if .Values.gate.TLS.rootCA_fileName }}
          - key: {{ .Values.gate.TLS.rootCA_fileName }}
            path: ca.pem
          {{- end }}
      {{- end }}
