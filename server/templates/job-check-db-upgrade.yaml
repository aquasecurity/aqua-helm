apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-check-db-upgrade
  labels:
    app: {{ .Release.Name }}-console
    aqua.component: server
    {{- range $key, $value := .Values.web.podLabels }}
      {{- printf "%s: %s" $key (tpl $value $ | quote) | nindent 4 }}
    {{- end }}
    {{- include "aqua.template-labels" . | nindent 4 }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  backoffLimit: 0
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        app: {{ .Release.Name }}-console
        aqua.component: server
        {{- range $key, $value := .Values.web.podLabels }}
          {{- printf "%s: %s" $key (tpl $value $ | quote) | nindent 8 }}
        {{- end }}
        {{- include "aqua.template-labels" . | nindent 8 }}
    spec:
      restartPolicy: Never
      containers:
        - name: check-db-upgrade-job
          {{- with .Values.web.container_securityContext }}
          securityContext:
            {{ toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.imageCredentials.repositoryUriPrefix }}/{{ .Values.web.image.repository }}:{{ .Values.web.image.tag }}"
          imagePullPolicy: "{{ .Values.web.image.pullPolicy }}"
          command: ["/opt/aquasec/sedockweb", "test-upgrade"]
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-web-config
          env:
        {{- if .Values.global.db.passwordFromSecret.enabled }}
            - name: SCALOCK_DBPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.db.passwordFromSecret.dbPasswordName }}
                  key: {{ .Values.global.db.passwordFromSecret.dbPasswordKey }}
        {{- else }}
            - name: SCALOCK_DBPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-database-password
                  key: db-password
        {{- end }}
            - name: SCALOCK_AUDIT_DBPASSWORD
          {{- if .Values.global.db.passwordFromSecret.enabled }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.db.passwordFromSecret.dbAuditPasswordName }}
                  key: {{ .Values.global.db.passwordFromSecret.dbAuditPasswordKey }}
          {{- else if and ( not .Values.global.db.passwordFromSecret.enabled ) ( .Values.global.db.external.enabled ) }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-database-password
              {{- if .Values.global.db.external.auditPassword }}
                  key: audit-password
              {{- else }}
                  key: db-password
              {{- end }}
          {{- else }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-database-password
                  key: audit-password
          {{- end }}
      imagePullSecrets:
      {{- if .Values.imageCredentials.create }}
        - name: {{ .Release.Namespace }}-registry-secret
      {{- else }}
        - name: {{ .Values.imageCredentials.name }}
      {{- end }}
      {{- with .Values.global.web.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
