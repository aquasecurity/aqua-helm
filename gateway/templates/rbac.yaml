{{- if .Values.rbac.create }}
{{- if not .Values.global.platform -}}
{{ template "platform" .}}
{{- end }}
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Release.Name }}-cluster-role
  labels:
    app: {{ .Release.Name }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    rbac.example.com/aggregate-to-monitoring: "true"
rules:
- apiGroups: [""]
  resources: ["nodes", "services", "endpoints", "pods", "deployments", "namespaces","componentstatuses"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["*"]
  verbs: ["get", "list", "watch"]
{{- if eq .Values.global.platform "openshift" }}
- apiGroups: [""]
  resources: ["imagestreams", "imagestreams/layers"]
  verbs: ["get", "list", "watch"]
{{- end }}
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Release.Name }}-role-binding
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  {{- if .Values.clusterRole.roleRef }}
  name: {{ .Values.clusterRole.roleRef }}
  {{- else }}
  name: {{ .Release.Name }}-cluster-role
  {{- end }}
subjects:
  - kind: ServiceAccount
    name: {{ .Values.global.serviceAccount.name }}
    namespace: {{ .Release.Namespace }}

{{- if eq .Values.global.platform "openshift" }}
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Release.Name }}-cluster-reader
subjects:
  - kind: ServiceAccount
    name: {{ .Values.global.serviceAccount.name }}
    namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-reader
---
allowHostDirVolumePlugin: true
allowHostIPC: false
allowHostNetwork: false
allowHostPID: false
allowHostPorts: false
allowPrivilegeEscalation: true
allowPrivilegedContainer: false
apiVersion: security.openshift.io/v1
defaultAddCapabilities: null
fsGroup:
  type: RunAsAny
groups: []
kind: SecurityContextConstraints
metadata:
  annotations:
    kubernetes.io/description: aqua scc provides all features of the restricted SCC
      but allows users to run with any non-root UID and access hostPath. The user must
      specify the UID or it must be specified on the by the manifest of the container runtime.
    release.openshift.io/create-only: "true"
  name: {{ .Release.Name }}-scc
priority: null
readOnlyRootFilesystem: false
requiredDropCapabilities: null
runAsUser:
  type: MustRunAsNonRoot
seLinuxContext:
  type: MustRunAs
supplementalGroups:
  type: RunAsAny
users:
- system:serviceaccount:{{ .Release.Namespace }}:{{ .Values.global.serviceAccount.name }}
volumes:
- configMap
- downwardAPI
- emptyDir
- persistentVolumeClaim
- projected
- secret
- hostPath
{{- end }}

## TKG RBAC
{{- if eq .Values.global.platform "tkg" }}
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: rolebinding-default-privileged-sa-ns_default
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: psp:vmware-system-privileged
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: Group
  apiGroup: rbac.authorization.k8s.io
  name: system:serviceaccounts
{{- end -}}

{{- end }}