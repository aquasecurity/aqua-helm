rbac:
  create: false # Enable to create RBAC for gateway chart

clusterRole:
  roleRef: ""

console:
  publicIP:
  publicPort:

replicaCount: 1
logLevel:
image:
  repository: gateway
  tag: "6.5"
  pullPolicy: Always
service:
  type: LoadBalancer     # Enable gateway to internal by changing type to "clusterIP"
  loadbalancerIP: "" # Specify loadBalancerIP address for aqua-web in AKS platform
  labels: {}
  annotations: {}
  ports:
    - name: aqua-gate
      port: 3622
      targetPort: 3622
      nodePort:
      protocol: TCP
    - name: aqua-gate-ssl
      port: 8443
      targetPort: 8443
      nodePort:
      protocol: TCP
    - name: aqua-health
      port: 8082
      protocol: TCP
      targetPort: 8082
      nodePort:
publicIP:
livenessProbe:
  httpGet:
    path: /
    port: 8082
  initialDelaySeconds: 60
  periodSeconds: 30
readinessProbe:
  tcpSocket:
    port: 8443
  initialDelaySeconds: 60
  periodSeconds: 60
resources: {}
  # Note: For recommendations please check the official sizing guide.
  # requests:
  #   cpu: 100m
  #   memory: 0.2Gi
  # limits:
  #   cpu: 1000m
#   memory: 2Gi
nodeSelector: {}
tolerations: []
affinity: {}
podAnnotations: {}
#  my-annotation-key: my value; more value
securityContext:
  runAsUser: 11431
  runAsGroup: 11433
  fsGroup: 11433
container_securityContext: {}

pdb:
  minAvailable: "1"
# TLS is for enabling mTLS/TLS establishment between gateway <-> server and gateway <-> enforcers
TLS:
  enabled: false              # enable to true for secure communication (mTLS/TLS)
  secretName: ""               # provide certificates secret name created to enable tls/mtls communication between enforcer and gateway/envoy
  publicKey_fileName: ""       #provide filename of the public key eg: aqua_gateway.crt
  privateKey_fileName: ""      #provide filename of the private key eg: aqua_gateway.key
  rootCA_fileName: ""          #provide filename of the rootCA, if using self-signed certificates eg: rootCA.crt
  aqua_verify_enforcer: "0"    # change it to "1" for enabling mTLS between enforcer and gateway/envoy
# extraEnvironmentVars is a list of extra environment variables to set in the gateway deployments.
# https://docs.aquasec.com/docs/gateway-optional-variables
extraEnvironmentVars: {}
# ENV_NAME: value
# extraSecretEnvironmentVars is a list of extra environment variables to set in the gateway deployments.
# These variables take value from existing Secret objects.
extraSecretEnvironmentVars: []
  # - envName: ENV_NAME
  #   secretName: name
  #   secretKey: key

#enable or disable creation of headless service for envoy
headlessService: true

global:
  serviceAccount:
    create: false
    name: "aqua-gateway-sa"
    annotations: {}
  # Specifies the secret data for imagePullSecrets needed to fetch the private docker images
  imageCredentials:
    create: false
    name: aqua-registry-secret # example
    repositoryUriPrefix: "registry.aquasec.com" # for dockerhub - "docker.io"
    registry: "registry.aquasec.com" #REQUIRED only if create is true, for dockerhub - "index.docker.io/v1/"
    username: ""
    password: ""
  #Please specify k8s platform acronym. Allowed values are aks, eks, gke, openshift, tkg, tkgi, k8s
  # aks = Azure Kubernetes Service
  # gke = Google kubernetes Engine
  # openshift = RedHat Openshift/OCP
  # tkg = VMware Tanzu kubernetes Grid
  # tkgi = VMware Tanzu kubernetes Grid Integrated Edition
  # k8s = Plain/on-prem Vanilla Kubernetes
  # rancher = Rancher Kubernetes Platform
  # gs = GaintSwarm platform
  # k3s = k3s kubernetes platform
  platform: ""
  db:
    external:
      enabled: true
      name: ""
      host: ""
      port: ""
      user: ""
      password: ""
      auditName: ""
      auditHost: ""
      auditPort: ""
      auditUser: ""
      auditPassword:
      pubsubName: ""
      pubsubHost: ""
      pubsubPort: ""
      pubsubUser: ""
      pubsubPassword: ""
    passwordFromSecret:
      enabled: false              #Enable if loading passwords for db and audit-db from secret
      dbPasswordName: ""            #Specify the Password Secret name used for db password
      dbPasswordKey: ""             #Specify the db password key name stored in the #dbPasswordName secret
      dbAuditPasswordName: ""          #Specify the Password Secret name used for audit db password
      dbAuditPasswordKey: ""            #Specify the audit db password key name stored in the #dbAuditPasswordName secret
      dbPubsubPasswordName: ""            #Specify the Password Secret name used for pubsub db password
      dbPubsubPasswordKey: ""           #Specify the pubsub db password key name stored in the #PubsubPasswordName secret
    ssl: false
    auditssl: false
    pubsubssl: false