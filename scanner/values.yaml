# Specifies the secret data for imagePullSecrets needed to fetch the private docker images
imageCredentials:
  create: false   #enable to create registry credentials for scanner image
  name:  # example
  repositoryUriPrefix: "registry.aquasec.com" # for dockerhub - "docker.io"
  registry: "registry.aquasec.com" #REQUIRED only if create is true, for dockerhub - "index.docker.io/v1/"
  username: ""
  password: ""

dockerSock:
  mount: # put true for mount docker socket.
  path: /var/run/docker.sock # pks - /var/vcap/data/sys/run/docker/docker.sock

directCC:
  enabled: false    # Change it to true if the scanners should connect directly to CyberCenter

serviceAccount:
  create: false     #Change it to false if the cluster doesn't consists aqua service account
  name:    #Mention the Service Account name, Default "aqua-sa"

server:
  scheme: "http" #specify the schema for the server host URL, default it is http
  serviceName: "aqua-console-svc" # example
  port: 8080

serverSSL:
  enabled: false
  secretName: "scanner-web-cert"
  serverSSLCert:        # if serverSLL enabled true, add base64 value of the the server public certofcate

cyberCenter:
  mtls:
    enabled: false             # enable to true for mTLS communication with cyber center
    secretName: ""              # provide certificates secret name created to enable tls/mtls communication between scanner and cybercenter
    publicKey_fileName: ""      #provide filename of the public key eg: aqua_scanner.crt
    privateKey_fileName: ""     #provide filename of the private key eg: aqua_scanner.key
    rootCA_fileName: ""         #provide filename of the rootCA, if using self-signed certificates eg: rootCA.crt

image:
  repository: scanner
  tag: "6.5"
  pullPolicy: Always

logLevel:

nameOverride: "aqua-scanner"
fullnameOverride: "aqua-scanner"

user: ""          # user name for the scanner created in the console
password: ""      # password for the scanner user you can also use "passwordSecret" below for loading password from secrets
# Loading scanner user & password from secret
scannerUserSecret:
  enable: false   # change it to true for loading password from secrets
  secretName: ""  # secret name for the scanner password secret
  userKey: ""   # secret key of the scanner user
  passwordKey: "" # secret key of the scanner password

replicaCount: 1
livenessProbe: {}
readinessProbe: {}
resources: {}
  # Note: For recommendations please check the official sizing guide.
  # requests:
  #   cpu: 500m
  #   memory: 1Gi
  # limits:
  #   cpu: 3000m
  #   memory: 5Gi
nodeSelector: {}
tolerations: []
affinity: {}
podAnnotations: {}
#  my-annotation-key: my value; more value
securityContext:
  runAsUser: 11431
  runAsGroup: 11433
  fsGroup: 11433
container_securityContext: {}

# extraEnvironmentVars is a list of extra environment variables to set in the scanner deployments.
# https://docs.aquasec.com/docs/scanner-optional-variables
extraEnvironmentVars: {}
  # ENV_NAME: value

# extraSecretEnvironmentVars is a list of extra environment variables to set in the scanner deployments.
# These variables take value from existing Secret objects.
extraSecretEnvironmentVars: []
  # - envName: ENV_NAME
  #   secretName: name
  #   secretKey: key
