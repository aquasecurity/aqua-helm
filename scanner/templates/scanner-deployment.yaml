---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-scanner
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}-scanner
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-scanner
  template:
    metadata:
      annotations:
      {{- if and (.Values.tolerations) (semverCompare "<1.6-0" .Capabilities.KubeVersion.GitVersion) }}
        scheduler.alpha.kubernetes.io/tolerations: '{{ toJson .Values.tolerations }}'
      {{- end }}
      {{- with .Values.podAnnotations }}
      {{- range $key,$value := . }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
      {{- end }}
      labels:
        app: {{ .Release.Name }}-scanner
      name: {{ .Release.Name }}-scanner
    spec:
      {{- with .Values.securityContext }}
      securityContext:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- if not .Values.serviceAccount}}
      serviceAccount: {{ .Release.Name }}-sa
      {{- else }}
      serviceAccount: {{ .Values.serviceAccount.name }}
      {{- end }}
      containers:
      - name: scanner
        {{- with .Values.container_securityContext }}
        securityContext:
{{ toYaml . | indent 10 }}
        {{- end }}
        image: "{{ .Values.imageCredentials.repositoryUriPrefix }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        args:
        - daemon
        {{- if .Values.directCC.enabled }}
        - --direct-cc
        {{- end }}
        - --user
        {{- if .Values.scannerUserSecret.enable }}
        - "$(SCANNER_USER)"
        {{- else }}
        - "{{ required "Please specify a username associated with the Scanner role" .Values.user }}"
        {{- end }}
        - --password
        {{- if .Values.scannerUserSecret.enable }}
        - "$(SCANNER_PASSWORD)"
        {{- else }}
        - "{{ required "Please specify a password for a user associated with the Scanner role" .Values.password }}"
        {{- end }}
        - --host
        - "{{ .Values.server.scheme | default "http" }}://{{ .Values.server.serviceName }}:{{ .Values.server.port }}"
        env:
        - name: SCALOCK_LOG_LEVEL
          value: {{ .Values.logLevel | default "INFO" }}
        - name: AQUA_SCANNER_LOGICAL_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        {{- if .Values.scannerUserSecret.enable }}
          {{- if or  (not .Values.scannerUserSecret.secretName) (not .Values.scannerUserSecret.passwordKey) (not .Values.scannerUserSecret.userKey) }}
          {{- template "scannerSecret" . }}
          {{- else }}
        - name: SCANNER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.scannerUserSecret.secretName }}
              key: {{ .Values.scannerUserSecret.passwordKey }}
        - name: SCANNER_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.scannerUserSecret.secretName }}
              key: {{ .Values.scannerUserSecret.userKey }}
          {{- end }}
        {{- end }}
        {{- include "scanner.extraEnvironmentVars" .Values | nindent 8 }}
        {{- include "scanner.extraSecretEnvironmentVars" .Values | nindent 8 }}
        {{- if .Values.dockerSock.mount }}
        volumeMounts:
        - mountPath: /var/run/docker.sock
          name: docker-socket-mount
        {{- end }}
        ports:
        - containerPort: 8080
          protocol: TCP
{{- with .Values.livenessProbe }}
        livenessProbe:
{{ toYaml . | indent 10 }}
{{- end }}
{{- with .Values.readinessProbe }}
        readinessProbe:
{{ toYaml . | indent 10 }}
{{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- if and (.Values.tolerations) (semverCompare "^1.6-0" .Capabilities.KubeVersion.GitVersion) }}
      tolerations:
{{ toYaml .Values.tolerations | indent 6 }}
      {{- end }}
      {{- if .Values.dockerSock.mount }}
      volumes:
      - name: docker-socket-mount
        hostPath:
          path: {{ .Values.dockerSock.path }}
      {{- end }}
