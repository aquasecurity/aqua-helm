---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Release.Name }}-ds
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}-ds
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}-ds
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/enforcer-configmap.yaml") . | sha256sum }}
      {{- if not .Values.securityContext.privileged }}
        container.apparmor.security.beta.kubernetes.io/enforcer: unconfined
      {{- end }}
      {{- if and (.Values.tolerations) (semverCompare "<1.6-0" .Capabilities.KubeVersion.GitVersion) }}
        scheduler.alpha.kubernetes.io/tolerations: '{{ toJson .Values.tolerations }}'
      {{- end }}
      {{- with .Values.podAnnotations }}
      {{- range $key,$value := . }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
      {{- end }}
      labels:
        app: {{ .Release.Name }}-ds
      name: {{ .Release.Name }}-ds
    spec:
      serviceAccount: {{ .Values.serviceAccount.name }}
      hostPID: true
      containers:
      - name: enforcer
        image: "{{ .Values.imageCredentials.repositoryUriPrefix }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-enforcer-config
        env:
        {{- if .Values.enforcerTokenSecretName }}
        - name: AQUA_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ .Values.enforcerTokenSecretName }}
              key: {{ .Values.enforcerTokenSecretKey }}
        {{- else }}
        - name: AQUA_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-token
              key: token
        {{- end }}
        {{- include "enforcer.extraEnvironmentVars" .Values | nindent 8 }}
        {{- include "enforcer.extraSecretEnvironmentVars" .Values | nindent 8 }}
        volumeMounts:
        {{- if .Values.TLS.enabled }}
        - name: certs
          mountPath: /opt/aquasec/ssl/
          readOnly: true
        {{- end }}
        - mountPath: /var/run
          name: var-run
        - mountPath: /dev
          name: dev
        - mountPath: /host/sys
          name: sys
          readOnly: true
        - mountPath: /host/proc
          name: proc
          readOnly: true
        - mountPath: /host/etc
          name: etc
          readOnly: true
        - mountPath: /host/opt/aquasec
          name: aquasec
          readOnly: true
        - mountPath: /opt/aquasec/tmp
          name: aquasec-tmp
        - mountPath: /opt/aquasec/audit
          name: aquasec-audit
        - mountPath: /data
          name: aquasec-data
{{- if .Values.healthMonitor.enabled }}
{{- with .Values.livenessProbe }}
        livenessProbe:
{{ toYaml . | indent 10 }}
{{- end }}
{{- with .Values.readinessProbe }}
        readinessProbe:
{{ toYaml . | indent 10 }}
{{- end }}
{{- end }}
        resources:
{{ toYaml .Values.resources | indent 12 }}
      volumes:
      {{- if .Values.hostRunPath }}
      - name: var-run
        hostPath:
          path: {{ .Values.hostRunPath }}
      {{- else }}
      - name: var-run
        hostPath:
          path: /var/run
      {{- end }}
      - name: dev
        hostPath:
          path: /dev
      - name: sys
        hostPath:
          path: /sys
      - name: proc
        hostPath:
          path: /proc
      - name: etc
        hostPath:
          path: /etc
      - name: aquasec
        hostPath:
          path: /var/lib/aquasec
      - name: aquasec-tmp
        hostPath:
          path: /var/lib/aquasec/tmp
      - name: aquasec-audit
        hostPath:
          path: /var/lib/aquasec/audit
      - name: aquasec-data
        hostPath:
          path: /var/lib/aquasec/data
      {{- if .Values.TLS.enabled }}
      - name: certs
        secret:
          defaultMode: 420
          secretName: {{ .Values.TLS.secretName }}
          items:
          - key: {{ .Values.TLS.publicKey_fileName }}
            path: cert.pem
          - key: {{ .Values.TLS.privateKey_fileName }}
            path: key.pem
          {{- if .Values.TLS.rootCA_fileName }}
          - key: {{ .Values.TLS.rootCA_fileName }}
            path: ca.pem
          {{- end }}
      {{- end }}
{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
{{- if and (.Values.tolerations) (semverCompare "^1.6-0" .Capabilities.KubeVersion.GitVersion) }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
  {{ end }}