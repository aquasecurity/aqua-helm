{{- if not .Values.windowsEnforcer.allWinNodes.enable }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  {{- if .Values.expressMode }}
  name: aqua-enforcer-ds
  {{ else }}
  name: {{ .Release.Name }}-ds
  {{ end }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}-ds
    aqua.component: enforcer
    {{ include "aqua.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}-ds
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/enforcer-configmap.yaml") . | sha256sum }}
      {{- if not .Values.container_securityContext.privileged }}
        container.apparmor.security.beta.kubernetes.io/enforcer: unconfined
      {{- end }}
      {{- if and (.Values.tolerations) (semverCompare "<1.6-0" .Capabilities.KubeVersion.GitVersion) }}
        scheduler.alpha.kubernetes.io/tolerations: '{{ toJson .Values.tolerations }}'
      {{- end }}
      {{- with .Values.podAnnotations }}
      {{- range $key,$value := . }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
      {{- end }}
      {{- if .Values.vaultSecret.enabled }}
      {{- with .Values.vaultAnnotations }}
      {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      labels:
        app: {{ .Release.Name }}-ds
        aqua.component: enforcer
        {{- range $key, $value := .Values.podLabels }}
        {{- printf "%s: %s" $key (tpl $value $ | quote) | nindent 8 }}
        {{- end }}
        {{ include "aqua.labels" . | nindent 8 }}
      name: {{ .Release.Name }}-ds
    spec:
      {{- if .Values.dnsNdots }}
      dnsConfig:
        options:
          - name: ndots
            value: {{ .Values.dnsNdots | quote }}
      {{- end }}
      {{- with .Values.securityContext }}
      securityContext:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- if or .Values.priorityClass.create .Values.priorityClass.name }}
      priorityClassName: {{ template "priorityClass" . }}
      {{- end }}
      serviceAccount: {{ template "agentServiceAccount" . }}
      containers:
      - name: enforcer
        image: "{{ .Values.global.imageCredentials.repositoryUriPrefix }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        container_securityContext:
          {{- toYaml .Values.container_securityContext | nindent 10 }}
        {{- if .Values.vaultSecret.enabled }}
        command: ["/bin/sh"]
        args: ["-c", "source {{ .Values.vaultSecret.vaultFilepath }} && /autorun.sh"]
        {{- end }}
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-enforcer-config
        env:
        - name: AQUA_NODE_NAME
        {{- if .Values.nodeName }}
          value: {{ .Values.nodeName }}
        {{- else }}
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        {{- end }}
        - name: AQUA_LOGICAL_NAME
        {{- if .Values.logicalName }}
          value: {{ .Values.logicalName }}
        {{- else }}
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        {{- end }}
        {{- if not .Values.vaultSecret.enabled }}
        {{- if .Values.enforcerTokenSecretName }}
        - name: AQUA_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ .Values.enforcerTokenSecretName }}
              key: {{ .Values.enforcerTokenSecretKey }}
        {{- else }}
        - name: AQUA_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-agent-token
              key: token
        {{- end }}
        {{- end }}
        {{- include "extraEnvironmentVars" .Values | nindent 8 }}
        {{- include "extraSecretEnvironmentVars" .Values | nindent 8 }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        {{- if .Values.TLS.enabled }}
        - name: certs
          mountPath: /opt/aquasec/ssl/
          readOnly: true
        {{- end }}
        {{- if eq .Values.global.platform "tkgi" }}
          #fallback for docker
        - mountPath: /var/run
          name: var-run
          #access config.json on TKGI docker
        - mountPath: /run/docker
          name: run-docker
          #mount for correct discovery
        - mountPath: /var/vcap/sys/run
          name: var-run-vcap
          ##access config.json on TKGI containerd
        - mountPath: /var/vcap/data/sys/run
          name: var-vcap-data
        {{- else }}
        - mountPath: /var/run
          name: var-run
        {{- end }}
        - mountPath: /dev
          name: dev
        - mountPath: /host/sys
          name: sys
          readOnly: true
        - mountPath: /host/proc
          name: proc
          readOnly: true
        - mountPath: /host/etc
          name: etc
          readOnly: true
        - mountPath: /host/opt/aquasec
          name: aquasec
          readOnly: true
        - mountPath: /opt/aquasec/tmp
          name: aquasec-tmp
        - mountPath: /opt/aquasec/audit
          name: aquasec-audit
        - mountPath: /data
          name: aquasec-data
        - mountPath: /var/lib/containers
          name: containers
        {{- if .Values.healthMonitor.enabled }}
        {{- with .Values.livenessProbe }}
        livenessProbe:
        {{ toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.readinessProbe }}
        readinessProbe:
        {{ toYaml . | nindent 10 }}
        {{- end }}
        {{- end }}
        {{- if and (not .Values.resources) .Values.expressMode }}
        resources:
          requests:
            cpu: "250m"
            memory: "500Mi"
          limits:
            cpu: "1000m"
            memory: "1500Mi"
        {{- else }}
        resources: {{ toYaml .Values.resources | nindent 12 }}
        {{- end }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      hostPID: {{ .Values.hostPID }}
      restartPolicy: {{ .Values.restartPolicy }}
      schedulerName: {{ .Values.schedulerName }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if eq .Values.global.platform "tkgi" }}
      - name: var-run
        hostPath:
          path: /var/vcap/sys/run/docker
          type: ""
      - name: run-docker
        hostPath:
          path: /run/docker
          type: ""
      - name: var-run-vcap
        hostPath:
          path: /var/vcap/sys/run
          type: ""
      - name: var-vcap-data
        hostPath:
          path: /var/vcap/data/sys/run
          type: ""
      {{- else }}
      - name: var-run
        hostPath:
          path: /var/run
          type: ""
      {{- end }}
      - name: dev
        hostPath:
          path: /dev
          type: ""
      - name: sys
        hostPath:
          path: /sys
          type: ""
      - name: proc
        hostPath:
          path: /proc
          type: ""
      - name: etc
        hostPath:
          path: /etc
          type: ""
      - name: aquasec
        hostPath:
          path: /var/lib/aquasec
          type: ""
      - name: aquasec-tmp
        hostPath:
          path: /var/lib/aquasec/tmp
          type: ""
      - name: aquasec-audit
        hostPath:
          path: /var/lib/aquasec/audit
      - name: aquasec-data
        hostPath:
          path: /var/lib/aquasec/data
          type: ""
      - name: containers
        hostPath:
          path: /var/lib/containers
          type: ""

      {{- if .Values.hostRunPath }}
      - name: var-run-vcap
        hostPath:
          path: {{ .Values.hostRunPath }}
          type: ""
      {{- end }}
      {{- if .Values.TLS.enabled }}
      - name: certs
        secret:
          defaultMode: 420
          secretName: {{ .Values.TLS.secretName }}
          items:
          - key: {{ .Values.TLS.publicKey_fileName }}
            path: cert.pem
          - key: {{ .Values.TLS.privateKey_fileName }}
            path: key.pem
          {{- if .Values.TLS.rootCA_fileName }}
          - key: {{ .Values.TLS.rootCA_fileName }}
            path: ca.pem
          {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{ toYaml . | nindent 8 }}
      {{ end }}
  updateStrategy:
    rollingUpdate:
      maxUnavailable: {{ .Values.updateStrategy.maxUnavailable }}
    type: {{ .Values.updateStrategy.type }}
{{- end }}
